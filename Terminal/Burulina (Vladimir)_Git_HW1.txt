JSON
 4. Создать внешний репозиторий c названием JSON.
 NEW -> Create repository

 5. Клонировать репозиторий JSON на локальный компьютер.
 git clone https://github.com/Burulina/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
 touch new.json

 7. Добавить файл под гит.
 git add new.json

 8. Закоммитить файл.
 git commit new.json -m "First commit"

 9. Отправить файл на внешний GitHub репозиторий.
 git push 

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json
 I                  // войти в режим редактирования

 { "FIO" : "Pavlenko Vladimir Aleksandrovich",
   "Age" : 35,
   "Pets" : 0,
   "Salary" : 2000 
 }
 
 ESC, :wq  // сохранить и выйти

 11. Отправить изменения на внешний репозиторий.
 git add .
 git commit -m "Add information about me"
 git push

 12. Создать файл preferences.json
 touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 nano preferences.json

 { "Film" : "Terminator",
  "TV Show" : "Alf",
  "Dish" : "Omelette",
  "Season" : "Spring",
  "Country" : "England"
 }

 Ctrl + X, Y  // сохранить и выйти

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 cat > skills.json
 { "Skill1" : "Terminal Linux",
   "Skill2" : "Git",
   "Skill3" : "REST API",
   "Skill4" : "Postman",
   "Skill5" : "JS",
   "Skill6" : "Android SDK",
   "Skill7" : "Jmeter"
 }

 Enter, Ctrl + C

 15. Отправить сразу 2 файла на внешний репозиторий.
 git add .
 git commit -m "Add my preferences and future skills"
 git push
 
 16. На веб интерфейсе создать файл bug_report.json.
 "Add File" -> "Create a new File"

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 "Commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 Open bug_report.json -> "Edit this file"
 
 { "id" : 1,
  "Summary" : "The SAVE DATA button is smaller than the others",
  "Severity" : "Trivial",
  "Priority" : "Low",
  "Environment" : "Redmi note 7, Android 10, QKQ1.190910.002",
  "AR" : "The application buttons have one view",
  "ER" : "The SAVE DATA button is smaller than the others"
}
 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
 git fetch
 git pull


XML
 21. Создать внешний репозиторий c названием XML.
 NEW -> Create repository

 22. Клонировать репозиторий XML на локальный компьютер.
 cd ..
 git clone https://github.com/Burulina/XML.git
  
 23. Внутри локального XML создать файл “new.xml”.
 cd XML
 touch new.xml

 24. Добавить файл под гит.
 git add new.xml

 25. Закоммитить файл.
 git commit new.xml -m "First commit"

 26. Отправить файл на внешний GitHub репозиторий.
 git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 vim new.xml
 I                  // войти в режим редактирования

<Info> 
  <FIO>Pavlenko Vladimir Aleksandrovich</FIO>
  <Age>35</Age>
  <Pets>0</Pets>
  <Salary>2000</Salary> 
</Info>
 
 ESC, :wq  // сохранить и выйти
 
 28. Отправить изменения на внешний репозиторий.
 git add .
 git commit -m "Add information about me"
 git push

 29. Создать файл preferences.xml
 touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 nano preferences.xml

<Preferences> 
  <Film>Terminator</Film>
  <TV Show>Alf</TV Show>
  <Dish>Omelette<Dish>
  <Season>Spring</Season>
  <Country>England</Country>
</Preferences>

 Ctrl + X, Y  // сохранить и выйти

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 cat > skills.xml
<Skills>
   <Skill1>Terminal Linux</Skill1>
   <Skill2>Git</Skill2>
   <Skill3>REST API</Skill3>
   <Skill4>Postman</Skill4>
   <Skill5>JS</Skill5>
   <Skill6>Android SDK</Skill6>
   <Skill7>Jmeter</Skill7>
</Skills>

 Enter, Ctrl + C

 32. Сделать коммит в одну строку.
 git add .; git commit -m "Add my preferences and future skills"
 
 33. Отправить сразу 2 файла на внешний репозиторий.
 git push 

 34. На веб интерфейсе создать файл bug_report.xml.
 "Add File" -> "Create a new File

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 "Commit new file"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 Open bug_report.xml -> "Edit this file"
 
<Bug> 
  <id>1</id>
  <Summary>The SAVE DATA button is smaller than the others</Summary>
  <Severity>Trivial</Severity>
  <Priority>Low</Priority>
  <Environment>Redmi note 7, Android 10, QKQ1.190910.002</Environmemt>
  <AR>The application buttons have one view</AR>
  <ER>The SAVE DATA button is smaller than the others</ER>
</Bug>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
 git fetch
 git pull


TXT
 1. Создать внешний репозиторий c названием TXT.
 NEW -> Create repository

 2. Клонировать репозиторий TXT на локальный компьютер.
 cd ..
 git clone https://github.com/Burulina/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
 cd TXT
 touch new.txt

 4. Добавить файл под гит.
 git add new.txt

 5. Закоммитить файл.
 git commit -m "First commit"

 6. Отправить файл на внешний GitHub репозиторий.
 git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
  vim new.txt
 I                  // войти в режим редактирования

 FIO: Pavlenko Vladimir Aleksandrovich;
 Age: 35;
 Pets: 0;
 Salary: 2000
 
 ESC, :wq  // сохранить и выйти

 8. Отправить изменения на внешний репозиторий.
 git add .; git commit -m "Add information about me"
 git push

 9. Создать файл preferences.txt
 touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 nano preferences.txt

 Film: Terminator;
 TV Show: Alf;
 Dish: Omelette;
 Season: Spring;
 Country: England

 Ctrl + X, Y  // сохранить и выйти

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 cat > skills.txt
 Skill1: Terminal Linux;
 Skill2: Git;
 Skill3: REST API;
 Skill4: Postman;
 Skill5: JS;
 Skill6: Android SDK;
 Skill7: Jmeter

 Enter, Ctrl + C

 12. Сделать коммит в одну строку.
 git add . && git commit -m "Add my preferences and future skills"

 13. Отправить сразу 2 файла на внешний репозиторий.
 git push

 14. На веб интерфейсе создать файл bug_report.txt.
 "Add File" -> "Create a new File"

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 "Commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 Open bug_report.txt -> "Edit this file"

 id: 1;
 Summary: The SAVE DATA button is smaller than the others;
 Severity: Trivial;
 Priority: Low;
 Environment: Redmi note 7, Android 10, QKQ1.190910.002;
 AR: The application buttons have one view;
 ER: The SAVE DATA button is smaller than the others

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT
 git fetch
 git pull


